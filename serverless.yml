service: Videoblur
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage}
  versionFunctions: false
  ecr:
    images:
      appimage:
        path: './images'


custom:
  ACCOUNT_ID: !Ref AWS::AccountId
  REGION: !Ref AWS::Region
  STAGE: ${self:provider.stage}
  APPLICATION: 'videoblur'

functions:
  FacedetectionStartFunction:
    name: ${self:custom.STAGE}-Admin-FacedetectionStartFunction
    runtime: nodejs18.x
    handler: './controllers/start_detection.handler'
    role: 'arn:aws:iam::021891572638:role/masterrole'
    package:
      patterns:
        - 'controllers/start_detection.js'
        - 'package.json'
    events:
      - http:
          path: '/admin/start-detection'
          method: 'get'
          cors: true
  GetFaceDetectionResultsFunction:
    name: ${self:custom.STAGE}-Admin-GetFaceDetectionResultsFunction
    runtime: nodejs18.x
    handler: './controllers/get_face_detection_results.handler'
    role: 'arn:aws:iam::021891572638:role/masterrole'
    package:
      patterns:
        - 'controllers/get_face_detection_results.js'
        - 'package.json'
    events:
      - http:
          path: '/admin/get-job-data'
          method: 'get'
          cors: true
  BlurFaceFunction:
    name: ${self:custom.STAGE}-Admin-BlurFaceFunction
    runtime: nodejs18.x
    handler: './controllers/blur_face.handler'
    role: 'arn:aws:iam::021891572638:role/masterrole'
    package:
      patterns:
        - 'controllers/blur_face.js'
        - 'package.json'
    events:
      - http:
          path: '/admin/blur'
          method: 'get'
          cors: true
  BlurFaceFunctionV3:
    name: ${self:custom.STAGE}-Admin-BlurFaceFunctionV3
    runtime: python3.9
    role: 'arn:aws:iam::021891572638:role/masterrole'
    image:
      name: appimage
      entryPoint:
          - '/lambda-entrypoint.sh'
    events:
      - http:
          path: '/admin/blur/v3'
          method: 'get'
          cors: true

